name: Build release

on:
  push:
    branches: [ graalVM-action ]

jobs:
  maven:
    name: Maven and Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Upload JARs
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: target/*.jar
          if-no-files-found: error

      - name: Upload Changelog
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: CHANGELOG.MD
          if-no-files-found: error



  nativeImage:
    name: graalVM ${{ matrix.version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: [ latest ]   # Append other graalVM versions as needed; e.g. [latest, dev, '22.0.0.2']
        os: [ macos-10.15, windows-2016, ubuntu-18.04 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.version }}
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: |
          mvn -B clean package -Pnative --file pom.xml

      - name: Unix CLI Stuff
        run: |
          cd target
          mv Log4j-Scanner Log4j-Scanner-${{ matrix.os }}
          tar -czvf Log4j-Scanner-${{ matrix.os }}.tar.gz Log4j-Scanner-${{ matrix.os }}
        if: runner.os != 'Windows'

      - name: Windows CLI Stuff
        run: |
          cd target
          mv Log4j-Scanner.exe Log4j-Scanner-${{ matrix.os }}.exe
          tar -czvf Log4j-Scanner-${{ matrix.os }}.tar.gz Log4j-Scanner-${{ matrix.os }}.exe
        if: runner.os == 'Windows'

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: target/Log4j-Scanner-${{ matrix.os }}.*
          if-no-files-found: error


  release:
    runs-on: ubuntu-latest
    needs: [maven, nativeImage]
    steps:
      - name: Download Build results
        uses: actions/download-artifact@v2
        with:
          name: package
          path: releasedResources

      - name: List Resources
        run: ls -R
        working-directory: releasedResources